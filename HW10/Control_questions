1. Вариативные шаблоны удобно использовать:
1) Для реализации гетерогенных динамических контейнеров (например кортеж std::tuple);
2) Реализация обёрток вокруг других объектов для произвольных классов
3) При реализации функций, обрабатывающей неизвестное количество аргументов произвольных типов (например print)

2. С помощью рекурсии, используя выражения свёртки (... op args // init op ... op args )

3. Используя  sizeof...(Types) или static переменную, рекурсивно проходящую по пакету

4. 
1) Унарная левая свертка (... op P) -> (((p1 op p2) op p3) op ...  - прямой порядок
2) Унарная правая сертка (P op ...) -> (n op (pn-1 op ... (p2 op p1)))...) - обратный порядок 
3) Бинарная левая свертка (init op ... op P) -> ((((init op p1) op p2) op ...) op pn) - прямой порядок, есть элемент init, с которым взаимодействуют элементы пакета
4) Бинарная правая свертка (P op ... op init) -> (p1 op (... op (pn−1 op (pn op init)))) - обратный порядок, есть элемент init, с которым взаимодействуют элементы пакета

5. 
1) Статический полиморфизм: решение о том, какой метод выполнить, принимается во время компиляции. Примером этого может быть перегрузка метода.
2) Динамический полиморфизм: решение о выборе метода для выполнения устанавливается во время выполнения. Примером этого может быть переопределение метода.
