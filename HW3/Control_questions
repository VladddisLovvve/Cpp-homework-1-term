1.  Принципы разработки функций: 
1) Писать короткие понятные функции, а длинные разбивать на мелкие;
2) Придерживаться следующей структуры кода: 
2.1) Проверка предусловий;
2.2) Трассировка/логгирование;
2.3) Рабочий код;
2.4) Проверка постусловий;
3) По необходимости использовать локальные переменные,
значения по умолчанию, встраивание, перегрузку.

2. Концепция встраивания функций заключается в том, что компилятор 
помещает новую копию функции в каждое место, где она вызывается. 
Код со встроенными функциями работает немного быстрее обычного, 
поскольку пропадают дополнительные действия по вызову функций, 
однако же при этом увеличивается расход памяти. 
Если функция встроена 10 раз, то в код будет вставлено 
10 копий функции. Поэтому встраивание лучше всего подходит 
для небольших часто используемых функций. 

3. Сначала записываются аргументы, не имеющие значения по умолчанию,
и только после них - те, что их имеют.

4. Выбор перегруженной функции разрешается заданием разных типов
для входных данных. При совпадении типов возникает ошибка компилятора.

5. Использовать статические переменные типа static;
в лямбда-функции можно осуществлять захват по ссылке.
