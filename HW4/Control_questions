1. Способы записи значений в поля: 
1) Присваивание (=), через (.) или (->);
2) Инициализация по умолчанию;
3) Агрегатная инициализация (устарело, пришло из С);
4) Конструктор - специальная функция-член.

2. Метод инициализации переменных-членов класса через список инициализации членов используется
вместо присваивания им значений после объявления.

3. Получение ресурса есть инициализация (англ. Resource Acquisition Is Initialization (RAII)) — 
программная идиома, смысл которой заключается в том, что с помощью тех или иных программных механизмов получение 
некоторого ресурса неразрывно совмещается с инициализацией, а освобождение — с уничтожением объекта.
Типичным (хотя и не единственным) способом реализации является организация получения доступа к ресурсу в конструкторе, 
а освобождения — в деструкторе соответствующего класса. В некоторых языках программирования, 
прежде всего в C++, деструктор переменной немедленно вызывается при выходе из её области видимости, в том числе в ситуациях, 
когда возникло исключение, и таким образом, ресурс необходимо освободить, что делает RAII ключевой концепцией для написания кода, 
безопасного при исключениях (в языках, семантика которых предполагает обязательное наличие сборщика мусора, объект продолжает существовать, 
пока на него существуют ссылки).

4. Битовые поля и объединения используются для оптимизации потребления памяти. Для их использования необходимо знать 
занимаемое место в памяти членов структуры.

5. Особенности перечесления с областью видимости:
1) При обращении к переменной необходимо записывать название перечесления в виде Month::January;
2) Для сравнивания экземпляра перечесления с int-ом необходимо использовать функцию static_cast: static_cast <Month> (n).
